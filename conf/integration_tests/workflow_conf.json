{
  "name": "{{ workflow_name }}",
  "email_notifications": {
    "on_failure": [
        "GX-SBOBNG-DLT-Team@shell.com"
      ],
    "no_alert_for_skipped_runs": false
  },
  "max_concurrent_runs": 1,
  "format": "MULTI_TASK",
  "queue": {
      "enabled": true
  },
  "tasks": [
    {
      "task_key": "setup",
      "notebook_task": {
        "notebook_path": "{{ repos_path }}/integration_tests/scripts/setup",
        "base_parameters": {
          "unique_repo_branch_id": "{{ unique_repo_branch_id }}",
          "unique_repo_branch_id_schema": "{{ unique_repo_branch_id }}",
          "repos_path": "{{ repos_path }}",
          "env": "{{ env }}"
        },
        "source": "WORKSPACE"
      },
      "job_cluster_key": "integration-tests-cluster",
      "timeout_seconds": 0,
      "email_notifications": {}
    },
    {
      "task_key": "process_start_workflow",
      "depends_on": [
        {
          "task_key": "setup"
        }
      ],
      "notebook_task": {
        "notebook_path": "{{ repos_path }}/datta_fi_eh/process_start_workflow",
        "base_parameters": {
          "env": "{{ env }}",
          "repos_path": "{{ repos_path }}",
          "unique_repo_branch_id": "",
          "unique_repo_branch_id_schema": "",
          "workflow_frequency" : ""
        },
        "source": "WORKSPACE"
      },
      "job_cluster_key": "integration-tests-cluster",
      "timeout_seconds": 0,
      "email_notifications": {}
    },   
    {
      "task_key": "fact_execution",
      "depends_on": [
        {
          "task_key": "process_start_workflow"
        }
      ],
      "notebook_task": {
        "notebook_path": "{{ repos_path }}/datta_pipeline_library/transformation/euh_eh/fact_execution",
        "base_parameters": {
          "env": "{{ env }}",
          "repos_path": "{{ repos_path }}",
          "load_type": "FULL",
          "unique_repo_branch_id": "{{ unique_repo_branch_id }}",
          "unique_repo_branch_id_schema": "{{ unique_repo_branch_id }}"
        },
        "source": "WORKSPACE"
      },
      "job_cluster_key": "integration-tests-cluster",
      "timeout_seconds": 0,
      "email_notifications": {}
    }, 
    {
      "task_key": "register_delta_tables_to_unitycatalog",
      "depends_on": [
        {
          "task_key": "fact_execution"
        }
      ],
      "notebook_task": {
        "notebook_path": "{{ repos_path }}/datta_fi_eh/register_deltatables_to_UC",
        "base_parameters": {
          "env": "{{ env }}",
          "repos_path": "{{ repos_path }}",
          "unique_repo_branch_id": "{{ unique_repo_branch_id }}",
          "unique_repo_branch_id_schema": "{{ unique_repo_branch_id }}",
          "requirements_filepath": "{{ requirements_filepath }}"
        },
        "source": "WORKSPACE"
      },
      "job_cluster_key": "integration-tests-cluster",
      "max_retries": 2,
      "min_retry_interval_millis": 30000,
      "retry_on_timeout": false,
      "timeout_seconds": 1200,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "process_end_workflow",
      "depends_on": [
        {
          "task_key": "register_delta_tables_to_unitycatalog"
        }
      ],
      "notebook_task": {
        "notebook_path": "{{ repos_path }}/datta_fi_eh/process_end_workflow",
        "base_parameters": {
          "env": "{{ env }}",
          "repos_path": "{{ repos_path }}",
          "unique_repo_branch_id": "",
          "unique_repo_branch_id_schema": "",
          "workflow_frequency" : ""
        },
        "source": "WORKSPACE"
      },
      "existing_cluster_id": "{{ cluster_id }}",
      "timeout_seconds": 0,
      "email_notifications": {}
    },
    {
      "task_key": "check_uc",
      "depends_on": [
        {
          "task_key": "process_end_workflow"
        }
      ],
      "notebook_task": {
        "notebook_path": "{{ repos_path }}/integration_tests/scripts/check_uc",
        "base_parameters": {
          "unique_repo_branch_id": "{{ unique_repo_branch_id }}",
          "unique_repo_branch_id_schema": "{{ unique_repo_branch_id }}",
          "env": "{{ env }}",
          "host": "{{ host }}",
          "requirements_filepath": "{{ requirements_filepath }}"
        },
        "source": "WORKSPACE"
      },
      "job_cluster_key": "integration-tests-cluster",
      "timeout_seconds": 0,
      "email_notifications": {}
    }
  ],
  "job_clusters": [
    {
      "job_cluster_key": "integration-tests-cluster",
      "new_cluster": {
        "cluster_name": "",
        "spark_version": "15.4.x-scala2.12",
        "spark_conf": {
          "spark.databricks.delta.preview.enabled": "true",
          "spark.master": "local[*, 4]",
          "spark.databricks.cluster.profile": "singleNode"
        },
        "azure_attributes": {
          "first_on_demand": 1,
          "availability": "ON_DEMAND_AZURE",
          "spot_bid_max_price": -1
        },
        "node_type_id": "Standard_DS3_v2",
        "custom_tags": {
          "ResourceClass": "SingleNode"
        },
        "spark_env_vars": {
          "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
        },
        "enable_elastic_disk": true,
        "data_security_mode": "SINGLE_USER",
        "runtime_engine": "STANDARD",
        "num_workers": 0
      }
    }
  ],
  "timeout_seconds": 0
}
